# Workflow-এর নাম
name: Sync Fancode Files via External Trigger

# Race Condition ঠেকানোর জন্য
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

# কখন এই Workflow চলবে
on:
  # ১. ম্যানুয়ালি চালানোর জন্য
  workflow_dispatch:
  
  # ২. বাইরের সার্ভিস থেকে সিগন্যাল (dispatch) পেলে
  repository_dispatch:
    types: [trigger-sync-fancode] # Fancode-এর জন্য একটি ইউনিক নাম

jobs:
  sync-json:
    runs-on: ubuntu-latest
    
    # এই job-টি তখনই চলবে যখন dispatch সিগন্যাল পাবে বা ম্যানুয়ালি চালানো হবে
    if: github.event.action == 'trigger-sync-fancode' || github.event_name == 'workflow_dispatch'
    
    steps:
      # ধাপ ১: আপনার নিজের রিপোজিটরির কোড চেকআউট করা
      - name: Checkout Your Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SYNC_TOKEN }} # <-- এটি আপনার পুরোনো শক্তিশালী PAT
          ref: 'main'

      # ধাপ ২: fancode.json এবং fancode.m3u ফাইল দুটি ডাউনলোড করা
      - name: Download latest files from Upstream
        run: |
          curl -o fancode.json "https://raw.githubusercontent.com/drmlive/fancode-live-events/main/fancode.json"
          curl -o fancode.m3u "https://raw.githubusercontent.com/drmlive/fancode-live-events/main/fancode.m3u"

      # ধাপ ৩: ফাইল পরিবর্তন করা, সেভ (Commit) এবং পুশ করা
      - name: Modify, Commit and Push if changed
        run: |
          # Git-এর জন্য একটি পরিচয় সেট করা
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # fancode.json ফাইলের ভেতরে "https://in-mc-fdlive" খুঁজে "https://bd-mc-fdlive" দিয়ে পরিবর্তন করা
          sed -i 's#https://in-mc-fdlive#https://bd-mc-fdlive#g' fancode.json
          
          # দুটি ফাইলকেই স্টেজিং-এ যোগ করা
          git add fancode.json fancode.m3u
          
          # চেক করা হচ্ছে ফাইল দুটিতে কোনো পরিবর্তন এসেছে কি না
          if git diff --staged --quiet; then
            echo "No changes to commit. Files are already up-to-date."
            exit 0 # সফলভাবে প্রস্থান করুন
          fi
          
          # যদি পরিবর্তন থাকে, তাহলে commit করা হবে
          git commit -m "Auto-update and localize Fancode files"
          
          # পুশ করার আগে রিমোটের সাথে rebase করে সিঙ্ক করা
          git pull origin main --rebase
          
          # 'origin main' নির্দিষ্ট করে পুশ করা
          git push origin main
